package $packagename.di;

import com.bakerj.base.di.qualifier.LocalDataStore;
import com.bakerj.base.di.qualifier.RemoteDataStore;
import com.bakerj.rxretrohttp.RxRetroHttp;
import $packagename.data.api.$nameApiService;
import $packagename.data.repository.I$nameRepository;
import $packagename.data.repository.$nameRepositoryImpl;
import $packagename.data.repository.datastore.$nameDataStore;
import $packagename.data.repository.datastore.$nameLocalDataStore;
import $packagename.data.repository.datastore.$nameRemoteDataStore;

import dagger.Module;
import dagger.Provides;

/**
 * @author $author
 * @date $date
 *
 * Generated by MVPGenerator
 */
@Module
public class $nameDataModule {

    @Per$nameScene
    @Provides
    $nameApiService provide$nameApiService() {
        return RxRetroHttp.create($nameApiService.class);
    }

    @Per$nameScene
    @Provides
    @LocalDataStore
    $nameDataStore provide$nameLocalDataStore() {
        return new $nameLocalDataStore();
    }

    @Per$nameScene
    @Provides
    @RemoteDataStore
    $nameDataStore provide$nameRemoteDataStore($nameApiService service) {
        return new $nameRemoteDataStore(service);
    }

    @Per$nameScene
    @Provides
    I$nameRepository provide$nameRepository(@RemoteDataStore $nameDataStore remoteDataStore,
                                            @LocalDataStore $nameDataStore localDataStore) {
        return new $nameRepositoryImpl(remoteDataStore, localDataStore);
    }
}
